#cloud-config
write_files:
  - path: /var/tmp/custom-config.sh
    permissions: 0755
    owner: root:root
    content: |
     #!/bin/bash
     ## Remove Old Docker Versions
     for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done 
     ## Add Docker's official GPG key:
     sudo apt-get install -y ca-certificates curl
     sudo install -m 0755 -d /etc/apt/keyrings
     sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
     sudo chmod a+r /etc/apt/keyrings/docker.asc
     ## Add the repository to Apt sources:
     echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" |   sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
     ## Install docker and common plugins
     sudo apt-get update
     sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
     ## Install NVIDIA Drivers
     sudo apt-get install -y ubuntu-drivers-common
     sudo ubuntu-drivers install
     curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg
     curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list | sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' | sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list
     sudo apt-get update
     sudo apt-get install -y nvidia-container-toolkit
     sudo nvidia-ctk runtime configure --runtime=docker
     sudo systemctl restart docker
     sudo usermod -a -G docker azureuser


runcmd:
  # NOTE: Commands must be non-blocking so send long running commands to the background
  - /var/tmp/custom-config.sh &

## Didnt reboot- testing automatic reboot.
# power_state:
#  delay: "+2"
#  mode: reboot
#  message: Rebooting after cloud-init finished
#  timeout: 15
#  condition: True